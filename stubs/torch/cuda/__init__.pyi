# Stubs for torch.cuda (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .random import *
import torch
from ..storage import _StorageBase
from ._utils import _get_device_index
from .streams import Event, Stream
from typing import Any, Optional

def find_cuda_windows_lib(): ...
def is_available(): ...

class DeferredCudaCallError(Exception): ...

def init() -> None: ...
def cudart(): ...

class cudaStatus:
    SUCCESS: int = ...
    ERROR_NOT_READY: int = ...

class CudaError(RuntimeError):
    def __init__(self, code: Any) -> None: ...

def check_error(res: Any) -> None: ...

class device:
    idx: Any = ...
    prev_idx: int = ...
    def __init__(self, device: Any) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, *args: Any): ...

class device_of(device):
    def __init__(self, obj: Any) -> None: ...

def set_device(device: Any) -> None: ...
def get_device_name(device: Optional[Any] = ...): ...
def get_device_capability(device: Optional[Any] = ...): ...
def get_device_properties(device: Any): ...
def stream(stream: Any) -> None: ...
def device_count(): ...
def current_device(): ...
def synchronize(device: Optional[Any] = ...): ...
def ipc_collect(): ...
def current_stream(device: Optional[Any] = ...): ...
def default_stream(device: Optional[Any] = ...): ...
def current_blas_handle(): ...
def empty_cache() -> None: ...
def memory_allocated(device: Optional[Any] = ...): ...
def max_memory_allocated(device: Optional[Any] = ...): ...
def reset_max_memory_allocated(device: Optional[Any] = ...): ...
def memory_cached(device: Optional[Any] = ...): ...
def max_memory_cached(device: Optional[Any] = ...): ...
def reset_max_memory_cached(device: Optional[Any] = ...): ...

storage_name: Any
tensor_name: Any

class _CudaBase:
    is_cuda: bool = ...
    is_sparse: bool = ...
    def type(self, *args: Any, **kwargs: Any): ...
    __new__: Any = ...

class DoubleStorage(_CudaBase, torch._C.CudaDoubleStorageBase, _StorageBase): ...
class FloatStorage(_CudaBase, torch._C.CudaFloatStorageBase, _StorageBase): ...
class LongStorage(_CudaBase, torch._C.CudaLongStorageBase, _StorageBase): ...
class IntStorage(_CudaBase, torch._C.CudaIntStorageBase, _StorageBase): ...
class ShortStorage(_CudaBase, torch._C.CudaShortStorageBase, _StorageBase): ...
class CharStorage(_CudaBase, torch._C.CudaCharStorageBase, _StorageBase): ...
class ByteStorage(_CudaBase, torch._C.CudaByteStorageBase, _StorageBase): ...
class HalfStorage(_CudaBase, torch._C.CudaHalfStorageBase, _StorageBase): ...
class BoolStorage(_CudaBase, torch._C.CudaBoolStorageBase, _StorageBase): ...
