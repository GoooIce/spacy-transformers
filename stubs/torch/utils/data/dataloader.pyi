# Stubs for torch.utils.data.dataloader (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

default_collate: Any

class DataLoader:
    dataset: Any = ...
    batch_size: Any = ...
    num_workers: Any = ...
    collate_fn: Any = ...
    pin_memory: Any = ...
    drop_last: Any = ...
    timeout: Any = ...
    worker_init_fn: Any = ...
    sampler: Any = ...
    batch_sampler: Any = ...
    def __init__(self, dataset: Any, batch_size: int = ..., shuffle: bool = ..., sampler: Optional[Any] = ..., batch_sampler: Optional[Any] = ..., num_workers: int = ..., collate_fn: Any = ..., pin_memory: bool = ..., drop_last: bool = ..., timeout: int = ..., worker_init_fn: Optional[Any] = ...) -> None: ...
    def __setattr__(self, attr: Any, val: Any) -> None: ...
    def __iter__(self): ...
    def __len__(self): ...

class _DataLoaderIter:
    dataset: Any = ...
    collate_fn: Any = ...
    batch_sampler: Any = ...
    num_workers: Any = ...
    pin_memory: Any = ...
    timeout: Any = ...
    sample_iter: Any = ...
    worker_init_fn: Any = ...
    worker_queue_idx: int = ...
    worker_result_queue: Any = ...
    batches_outstanding: int = ...
    worker_pids_set: bool = ...
    shutdown: bool = ...
    send_idx: int = ...
    rcvd_idx: int = ...
    reorder_dict: Any = ...
    done_event: Any = ...
    index_queues: Any = ...
    workers: Any = ...
    data_queue: Any = ...
    pin_memory_thread: Any = ...
    def __init__(self, loader: Any) -> None: ...
    def __len__(self): ...
    def __next__(self): ...
    next: Any = ...
    def __iter__(self): ...
    def __del__(self) -> None: ...
