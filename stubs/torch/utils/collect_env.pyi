# Stubs for torch.utils.collect_env (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from collections import namedtuple
from typing import Any

TORCH_AVAILABLE: bool
PY3: Any

SystemEnv = namedtuple('SystemEnv', ['torch_version', 'is_debug_build', 'cuda_compiled_version', 'gcc_version', 'cmake_version', 'os', 'python_version', 'is_cuda_available', 'cuda_runtime_version', 'nvidia_driver_version', 'nvidia_gpu_models', 'cudnn_version', 'pip_version', 'pip_packages', 'conda_packages'])

def run(command: Any): ...
def run_and_read_all(run_lambda: Any, command: Any): ...
def run_and_parse_first_match(run_lambda: Any, command: Any, regex: Any): ...
def get_conda_packages(run_lambda: Any): ...
def get_gcc_version(run_lambda: Any): ...
def get_cmake_version(run_lambda: Any): ...
def get_nvidia_driver_version(run_lambda: Any): ...
def get_gpu_info(run_lambda: Any): ...
def get_running_cuda_version(run_lambda: Any): ...
def get_cudnn_version(run_lambda: Any): ...
def get_nvidia_smi(): ...
def get_platform(): ...
def get_mac_version(run_lambda: Any): ...
def get_windows_version(run_lambda: Any): ...
def get_lsb_version(run_lambda: Any): ...
def check_release_file(run_lambda: Any): ...
def get_os(run_lambda: Any): ...
def get_pip_packages(run_lambda: Any): ...
def get_env_info(): ...

env_info_fmt: Any

def pretty_str(envinfo: Any): ...
def get_pretty_env_info(): ...
def main() -> None: ...
