# Stubs for torch.nn.modules.module (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ..parameter import Parameter
from collections import namedtuple
from typing import Any, Optional

_IncompatibleKeys = namedtuple('IncompatibleKeys', ['missing_keys', 'unexpected_keys'])

class Module:
    dump_patches: bool = ...
    training: bool = ...
    def __init__(self) -> None: ...
    def forward(self, *input: Any) -> None: ...
    def register_buffer(self, name: Any, tensor: Any) -> None: ...
    def register_parameter(self, name: Any, param: Any) -> None: ...
    def add_module(self, name: Any, module: Any) -> None: ...
    def apply(self, fn: Any): ...
    def cuda(self, device: Optional[Any] = ...): ...
    def cpu(self): ...
    def type(self, dst_type: Any): ...
    def float(self): ...
    def double(self): ...
    def half(self): ...
    def to(self, *args: Any, **kwargs: Any): ...
    def register_backward_hook(self, hook: Any): ...
    def register_forward_pre_hook(self, hook: Any): ...
    def register_forward_hook(self, hook: Any): ...
    def __call__(self, *input: Any, **kwargs: Any): ...
    def __getattr__(self, name: Any): ...
    def __setattr__(self, name: Any, value: Any) -> None: ...
    def __delattr__(self, name: Any) -> None: ...
    def state_dict(self, destination: Optional[Any] = ..., prefix: str = ..., keep_vars: bool = ...): ...
    def load_state_dict(self, state_dict: Any, strict: bool = ...): ...
    def parameters(self, recurse: bool = ...) -> None: ...
    def named_parameters(self, prefix: str = ..., recurse: bool = ...): ...
    def buffers(self, recurse: bool = ...) -> None: ...
    def named_buffers(self, prefix: str = ..., recurse: bool = ...): ...
    def children(self) -> None: ...
    def named_children(self) -> None: ...
    def modules(self) -> None: ...
    def named_modules(self, memo: Optional[Any] = ..., prefix: str = ...) -> None: ...
    def train(self, mode: bool = ...): ...
    def eval(self): ...
    def zero_grad(self) -> None: ...
    def share_memory(self): ...
    def extra_repr(self): ...
    def __dir__(self): ...
