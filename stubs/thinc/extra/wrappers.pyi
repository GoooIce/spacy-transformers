# Stubs for thinc.extra.wrappers (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ..compat import BytesIO
from ..neural._classes.model import Model
from typing import Any, Optional

def xp2torch(xp_tensor: Any): ...
def torch2xp(torch_tensor: Any): ...

class PyTorchWrapper(Model):
    conf: Any = ...
    def __init__(self, model: Any, conf: Optional[Any] = ...) -> None: ...
    #def begin_update(self, x_data: Any, drop: float = ..., **kwargs: Any): ...
    def to_disk(self, path: Any) -> None: ...
    def from_disk(self, path: Any) -> None: ...
    def to_bytes(self): ...
    def from_bytes(self, data: Any) -> None: ...
    def to_gpu(self, device_num: Any) -> None: ...
    def to_cpu(self) -> None: ...
    def resize_output(self, new_dim: Any) -> None: ...
    def resize_input(self) -> None: ...
    def use_params(self, params: Any) -> None: ...

class PyTorchWrapperRNN(PyTorchWrapper):
    def __call__(self, x_data: Any, h_0: Optional[Any] = ...): ...
    def begin_update(self, x_data: Any, h_0: Optional[Any] = ..., drop: float = ...): ...
    def resize_output(self, new_dim: Any) -> None: ...
    def resize_input(self) -> None: ...
    def use_params(self, params: Any) -> None: ...
